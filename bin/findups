# -*- mode: python -*-
# -*- coding: utf-8 -*-

__author__ = "Silvano Cirujano Cuesta"
__email__ = "silvanociru@gmx.net"
__copyright__ = "Copyright (C) Silvano Cirujano Cuesta 2020"
__license__ = "MPL-2.0"

# Python standard packages
import os
import os.path
import logging
import argparse
import socket
import time
# findups packages
import findups.scanner
import findups.comparator


# FUNCTIONS

def parse_args():
    '''Parse command line arguments'''
    hostname = socket.gethostname()
    parser = argparse.ArgumentParser()
    parser.add_argument('--db_path', action="store",
                        default=os.path.join(os.getenv("HOME"),
                                             hostname + ".db"),
                        help="Path of the DB")
    parser.add_argument('--debug', action="store_true",
                        help="Enable debugging")
    parser.add_argument('--accuracy', action="store",
                        default=findups.scanner.SAME_SIZE,
                        help="Specify accuracy level")
    parser.add_argument('--machine', action="store", default=hostname,
                        help="Hostname of machine being scanned")
    parser.add_argument('action', choices=['scan', 'compare'],
                        help="Specify action to run")
    parser.add_argument('directories', action="store", nargs='*',
                        help="Paths of the directories to scan")
    return parser.parse_args()

def scan(directories, machine, db_path, accuracy):
    ''' Scan directories of specified machine'''
    while directories:
        start = time.time()
        scanner = findups.scanner.DirScanner(machine=machine,
                                             db_path=db_path,
                                             log_level=log_level,
                                             accuracy=accuracy)
        directory = directories.pop()
        n_files, total_size = scanner.scan(directory)
        if not n_files or not total_size:
            continue
        end = time.time()
        duration = end - start
        print('%d files adding up to %d KBs have been scanned in %d seconds' %
              (n_files, int(total_size/1024), duration))
        print('%d files/second' % (int(n_files/duration)))

def compare(db_path, accuracy):
    '''Compare files of all scanned machines and directories'''
    comparator = findups.comparator.DirComparer(db_path=db_path,
                                                log_level=log_level,
                                                accuracy=accuracy)
    if comparator.duplicates():
        print("Duplicates found! You can view them in...")

# MAIN

def main():
    args = parse_args()
    if args.debug:
        log_level = logging.DEBUG
    else:
        log_level = logging.WARNING
    print("*****************************")
    if args.action == 'scan':
        scan(args.directories, args.machine, args.db_path, int(args.accuracy))
    elif args.action == 'compare':
        compare(args.db_path, int(args.accuracy))

if __name__ == '__main__':
    main()
